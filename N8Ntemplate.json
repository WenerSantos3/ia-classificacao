{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Loop over input items and create a message array for each task\nconst messages = [];\n\nfor (const { json: { body: { data: { title, description, id: taskId, labels, estimate }, actor: { name }, url } } } of $input.all()) {\n    \n    // Verifica se existe a label \"IA\" no array de labels\n    const hasLabelIA = labels.some(label => label.name === \"IA\");\n\n    // Adiciona a mensagem formatada\n    messages.push({\n        role: \"user\",\n        content: `Assess the difficulty of the following project task using the Fibonacci scale (1, 2, 3, 5, 8). Consider the complexity and the estimated time to complete the task, including the need for potential research. Here are the details:\\n\\nTitle: ${title}\\nDescription: ${description}\\nActor: ${name}\\nURL: ${url}\\n\\nPlease respond with a single number from the Fibonacci scale (1, 2, 3, 5, 8) that best represents the task's difficulty.`,\n        label: hasLabelIA,  // True se a label \"IA\" estiver presente, false caso contr√°rio\n        task_id: taskId,    // Adiciona o ID da task\n        estimate: estimate\n    });\n}\n\n// Retorna a lista de mensagens formatadas\nreturn messages;\n"
      },
      "id": "e6c34cca-587c-46d8-820e-0e253b7546c2",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": []
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "8676a221-8f75-4455-bb09-f2c913fad811",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78d45b7d-36d3-475d-9aa6-d8e486754e4b",
              "name": "output",
              "value": "={{ JSON.parse($json.output).estimate }}",
              "type": "string"
            },
            {
              "id": "0cb61a8f-d8e6-4369-835e-8f132c12459d",
              "name": "task_id",
              "value": "={{ $('Edit Fields').first().json.task_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e66d55fb-f61a-42d6-bed3-650002b89ff0",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2060,
        240
      ]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "id": "36ae1b0c-f68d-42eb-b031-40909c1cff05",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2720,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad204073-3474-4291-b3c2-d815dd0fb938",
              "leftValue": "=label {{ $json.label }}",
              "rightValue": "label true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "e17018ec-f71e-41bb-8491-e5c228470fee",
              "leftValue": "={{ $json.estimate }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "729eb0e8-489b-40b1-84bd-b88fb0cbfbed",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        1060,
        220
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"error\": \"not label or exist estimate\"\n}",
        "options": {}
      },
      "id": "0ce784e6-963d-44d5-9b00-7c02d5a1789a",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1320,
        440
      ]
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_SwZYdEoMsNzm0qt1QfHJLeM3",
          "mode": "list",
          "cachedResultName": "Teste"
        },
        "prompt": "define",
        "text": "={\n  \"model\": \"gpt-3.5-turbo\",\n  \"messages\": [{{ $json.content }}],\n  \"temperature\": 1,\n  \"max_tokens\": 256,\n  \"top_p\": 1,\n  \"frequency_penalty\": 0,\n  \"presence_penalty\": 0,\n  \"response_format\": \"json\"\n}",
        "options": {
          "preserveOriginalTools": true
        }
      },
      "id": "7f116812-8bd6-42ff-ac61-11906c4d2fd7",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        1660,
        240
      ],
      "alwaysOutputData": false,
      "credentials": {
        "openAiApi": {
          "id": "2i9pw32utUyBXdic",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linear.app/graphql",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linearApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"mutation { issueUpdate(id: \\\"{{ $json.task_id }}\\\", input: {estimate: {{ $json.output }}}) { success } }\"\n}\n",
        "options": {}
      },
      "id": "3d176120-1e8a-44fb-a1ab-1dc9d37b5a03",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2380,
        480
      ],
      "credentials": {
        "linearApi": {
          "id": "L8EnwPGKoKv6qqvi",
          "name": "Linear account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "point-task2",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "bded9760-be05-4b9b-91c3-65e0bab82e84",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        580,
        220
      ],
      "webhookId": "e45991dc-6f65-45fe-85df-225c20e1b8db"
    }
  ],
  "pinData": {},
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e160aa05-9dec-45c0-824f-4b8815424bba",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e02c60b301fc89147331a937ec16f84319f9f8363dcbc0ac7b3c5bf9a36a892b"
  },
  "id": "WRNhb3gTSyyKAmpW",
  "tags": []
}